---
// FIXME https://discord.com/channels/830184174198718474/845451724738265138/1019770939203915786
// const readmes = await Astro.glob('../../../packages/*/README.md')
// console.log('readmes', readmes)

export type Props = {
  source: string
}

const { source } = Astro.props

import NavSection from './NavSection.astro'
const pages = await Astro.glob('../pages/*.md')
const general = await Astro.glob('../pages/general/*.md')
const guides = await Astro.glob('../pages/guides/*.md')
const packages = (await Astro.glob('../pages/packages/*.md')).sort((a) =>
  a.frontmatter.title === 'core' ? -1 : 1,
)

const packageTypes = {
  compat: ['core-v1', 'core-v2', 'react-v1', 'react-v2'],
  adapter: ['npm-cookie-baker', 'npm-history', 'npm-react', 'npm-svelte'],
}

const sections = [
  {
    name: 'guides',
    open: false,
    pages: guides,
  },
  {
    name: 'general',
    open: false,
    pages: general,
  },
  {
    name: 'adapters',
    open: false,
    pages: packages.filter((page) =>
      packageTypes.adapter.includes(page.frontmatter.title),
    ),
  },
  {
    name: 'packages',
    open: true,
    pages: packages.filter(
      (page) =>
        !packageTypes.adapter.includes(page.frontmatter.title) &&
        !packageTypes.compat.includes(page.frontmatter.title),
    ),
  },
  {
    name: 'compat',
    open: false,
    pages: packages.filter((page) =>
      packageTypes.compat.includes(page.frontmatter.title),
    ),
  },
]
---

<input type="checkbox" checked="true" aria-details="sidebar toggler" />
<aside>
  <section aria-details="controls">
    <a
      aria-details="Github repo"
      title="Github repo"
      href="https://github.com/artalar/reatom"
      target="_parent"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        ><path
          d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"
        ></path>
      </svg>
    </a>
    <a
      href={source}
      target="_blank"
      aria-details="Edit on GitHub"
      title="Edit on GitHub">‚úè</a
    >
    <select name="theme">
      <option value="light">üåñ</option>
      <option value="system">üåì</option>
      <option value="dark">üåí</option>
    </select>
  </section>
  <nav id="nav-main" aria-label="main">
    <ul>
      {
        pages
          .sort(({ frontmatter: { title } }) => (title === 'Main' ? -1 : 1))
          .map(({ url, frontmatter }) => (
            <li>
              <a href={url || '/'}>{frontmatter.title}</a>
            </li>
          ))
      }
    </ul>
  </nav>
  {sections.map((section) => <NavSection section={section} />)}
</aside>

<style>
  input[aria-details='sidebar toggler'] {
    position: relative;
    left: 18rem;
    margin: 0;
    z-index: 1;
    outline: none;
    width: 0;
  }

  input[aria-details='sidebar toggler']::before {
    content: '‚Üê';
    position: absolute;
    top: 0;
    left: 0;
    width: 1rem;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    background-color: var(--bg1);
  }

  input[aria-details='sidebar toggler']:not(:checked) {
    left: 0;
  }
  input[aria-details='sidebar toggler']:not(:checked)::before {
    content: '‚Üí';
  }
  input[aria-details='sidebar toggler']:not(:checked) + aside {
    display: none;
  }
</style>
<script is:inline>
  document.querySelector(`input[aria-details='sidebar toggler']`).checked =
    window.innerWidth >= 768
</script>
<style>
  section[aria-details='controls'] {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  section[aria-details='controls'] a {
    border: none;
    height: 2rem;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  section[aria-details='controls'] a::after {
    display: none;
  }
  section[aria-details='controls'] a[aria-details='Github repo'] svg {
    fill: var(--fg);
    height: 1.5rem;
  }
  section[aria-details='controls'] a[aria-details='Edit on GitHub'] {
    transform: rotate(-45deg);
    background: var(--fg);
    color: var(--bg);
    border-radius: 50%;
    width: 1.5rem;
    height: 1.5rem;
    font-size: 1.3rem;
  }
  section[aria-details='controls'] select[name='theme'] {
    /* this toogled after script load */
    display: none;
    filter: hue-rotate(180deg) grayscale(0.8);
    font-size: 1.5rem;
    border: none;
  }
</style>

<script is:inline>
  const pallete = {
    light: {
      '--fg': 'var(--fg-default-light)',
      '--bg': 'var(--bg-default-light)',
      '--fg1': 'var(--fg1-default-light)',
      '--bg1': 'var(--bg1-default-light)',
      '--code-filter': 'var(--code-filter-default-light)',
    },
    dark: {
      '--fg': 'var(--fg-default-dark)',
      '--bg': 'var(--bg-default-dark)',
      '--fg1': 'var(--fg1-default-dark)',
      '--bg1': 'var(--bg1-default-dark)',
      '--code-filter': 'var(--code-filter-default-dark)',
    },
  }

  if (globalThis.matchMedia) {
    const theme = localStorage.getItem('theme') ?? 'system'
    const select = document.querySelector('select[name="theme"]')
    select.value = theme
    select.style.display = 'block'

    select.addEventListener('change', (e) => toggle(e.target.value))

    toggle(theme)

    function toggle(theme) {
      localStorage.setItem('theme', theme)

      if (theme === 'system') {
        for (const k in pallete.dark) {
          document.documentElement.style.removeProperty(k)
        }
      } else {
        for (const [k, v] of Object.entries(pallete[theme])) {
          document.documentElement.style.setProperty(k, v)
        }
      }
    }
  }
</script>
